(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),o=n(6),a=(n(0),n(117)),i={id:"introduction",title:"Introduction",sidebar_label:"Introduction",slug:"/concepts/"},c={unversionedId:"concepts/introduction",id:"concepts/introduction",isDocsHomePage:!1,title:"Introduction",description:"Overview",source:"@site/docs/general/concepts/introduction.md",slug:"/concepts/",permalink:"/docs/concepts/",editUrl:"https://github.com/polyhorn/polyhorn.github.io/edit/master/docs/general/concepts/introduction.md",version:"current",sidebar_label:"Introduction",sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/docs/contributing"},next:{title:"Components",permalink:"/docs/concepts/components"}},s=[{value:"Overview",id:"overview",children:[{value:"Annotated Example",id:"annotated-example",children:[]}]}],l={rightToc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("h3",{id:"annotated-example"},"Annotated Example"),Object(a.b)("h4",{id:"components"},"Components"),Object(a.b)("p",null,"Components are the basic building blocks that you use to create an app.\nComponents are created by implementing the ",Object(a.b)("inlineCode",{parentName:"p"},"Component")," trait on a type. For\nmore information about the required associated render function,\n",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"./components"}),"read more about components"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust",metastring:'title="component.rs"',title:'"component.rs"'}),"pub struct Button;\n\nimpl Component for Button { ... }\n")),Object(a.b)("h4",{id:"elements"},"Elements"),Object(a.b)("p",null,"Elements are specifications of a component by using an xml-like syntax. This\nxml-like syntax is not regular Rust syntax. It is syntactic sugar provided by\nthe ",Object(a.b)("inlineCode",{parentName:"p"},"poly!(...)")," macro. Elements are re-created at every re-render: they are\ncheap specifications of what you want a component to be. For more information\nabout elements, ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"./elements"}),"read this"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust",metastring:'title="element.rs"',title:'"element.rs"'}),"poly!(<Button />) // = Element::new(Button, ...)\n")),Object(a.b)("h4",{id:"instances"},"Instances"),Object(a.b)("p",null,"The renderer will create a new instance of a component for each element that it\nencounters during the first render. Upon subsequent renders, it will attempt to\nreconcile these elements: it tries to update existing instances with new\nelements. Only if that doesn't work will it create new instances."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust",metastring:'title="instance.rs"',title:'"instance.rs"'}),"let instance = render(poly!(<Button />), &mut Container::new());\n")))}p.isMDXComponent=!0},117:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,d=u["".concat(i,".").concat(b)]||u[b]||m[b]||a;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);