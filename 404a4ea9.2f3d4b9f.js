(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),m=r,d=s["".concat(i,".").concat(m)]||s[m]||u[m]||o;return n?a.a.createElement(d,c(c({ref:t},p),{},{components:n})):a.a.createElement(d,c({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),o=(n(0),n(117)),i={id:"color",title:"Color",sidebar_label:"Color",hide_title:!0},c={unversionedId:"color",id:"color",isDocsHomePage:!1,title:"Color",description:"Unstable",source:"@site/docs/api/color.md",slug:"/color",permalink:"/api/color",editUrl:"https://github.com/polyhorn/polyhorn.github.io/edit/master/docs/api/color.md",version:"current",sidebar_label:"Color",sidebar:"apiSidebar",previous:{title:"Overview",permalink:"/api/"},next:{title:"Font",permalink:"/api/font"}},l=[{value:"Declaration",id:"declaration",children:[]},{value:"Roadmap",id:"roadmap",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("span",{className:"badge badge--danger"},"Unstable"),Object(o.b)("h1",{style:{marginTop:0}},"Color"),Object(o.b)("h2",{id:"declaration"},"Declaration"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust",metastring:'title="Definition"',title:'"Definition"'}),"pub trait Color: Send + Sync {\n    fn from_rgba(red: u8, green: u8, blue: u8, alpha: f32) -> Self;\n    fn from_rgb(red: u8, green: u8, blue: u8) -> Self;\n    fn from_hexa(hex: u32, alpha: f32) -> Self;\n    fn from_hex(hex: u32) -> Self;\n}\n")),Object(o.b)("h2",{id:"roadmap"},"Roadmap"),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Currently, colors are implemented through a shared ",Object(o.b)("inlineCode",{parentName:"p"},"Color")," trait in the\n",Object(o.b)("inlineCode",{parentName:"p"},"polyhorn-style")," crate. In turn, platforms simply wrap a native color object\n(such as ",Object(o.b)("inlineCode",{parentName:"p"},"UIColor")," on iOS) in a unit struct. Although effective, this has\nseveral drawbacks:"),Object(o.b)("ol",{parentName:"div"},Object(o.b)("li",{parentName:"ol"},"Colors do not implement ",Object(o.b)("inlineCode",{parentName:"li"},"Copy"),", even though it is a simple type (basically\n",Object(o.b)("inlineCode",{parentName:"li"},"[f32; 4]"),")."),Object(o.b)("li",{parentName:"ol"},"Platform implementations must ensure that the native color object is\nthread-safe. Apple in particular does not unambiguously confirm whether this\nis the case."),Object(o.b)("li",{parentName:"ol"},"It's one of the few surfaces where we call native code on the Polyhorn\nthread."),Object(o.b)("li",{parentName:"ol"},'"Named" colors (such as ',Object(o.b)("inlineCode",{parentName:"li"},"Color::gray()"),") are platform-dependent.")))))}b.isMDXComponent=!0}}]);