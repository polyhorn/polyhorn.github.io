(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{130:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(n),b=r,m=s["".concat(i,".").concat(b)]||s[b]||y[b]||a;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(130)),i={id:"touchable-opacity",title:"TouchableOpacity",sidebar_label:"TouchableOpacity",hide_title:!0},c={unversionedId:"yoyo/touchable-opacity",id:"yoyo/touchable-opacity",isDocsHomePage:!1,title:"TouchableOpacity",description:"Unstable",source:"@site/docs/plugins/yoyo/touchable_opacity.md",slug:"/yoyo/touchable-opacity",permalink:"/plugins/yoyo/touchable-opacity",editUrl:"https://github.com/polyhorn/polyhorn.github.io/edit/master/docs/plugins/yoyo/touchable_opacity.md",version:"current",sidebar_label:"TouchableOpacity",sidebar:"pluginsSidebar",previous:{title:"AnimatedPresence",permalink:"/plugins/yoyo/animated-presence"},next:{title:"Variants",permalink:"/plugins/yoyo/variants"}},p=[],l={rightToc:p};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("span",{className:"badge badge--danger"},"Unstable"),Object(a.b)("h1",{style:{marginTop:0}},"TouchableOpacity"),Object(a.b)("p",null,"TouchableOpacity is a trivial wrapper around the core ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/components/view/"}),"View\ncomponent")," that lowers its opacity to 50% once it is\npressed, and smoothly animates it back to 100% opacity once it is released."),Object(a.b)("p",null,"Its implementation is actually quite compact:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),"use polyhorn::*;\nuse yoyo::{View, yoyo};\n\npub struct TouchableOpacity {\n    // ... props from core View ...\n}\n\nimpl Component for TouchableOpacity {\n    fn render(&self, manager: &mut Manager) -> Element {\n        yoyo!(States, {\n            :initial {\n                opacity: 1.0;\n            }\n\n            :pressed {\n                opacity: 0.5;\n            }\n\n            :initial:from(:pressed) {\n                transition_opacity: ease_in_out(0.4);\n            }\n        });\n\n        <View::<States>\n            // ... props from core View ...\n            >\n            { manager.children() }\n        </View>\n    }\n}\n")))}u.isMDXComponent=!0}}]);