(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{130:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},f=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),f=s(n),m=a,d=f["".concat(i,".").concat(m)]||f[m]||p[m]||o;return n?r.a.createElement(d,l(l({ref:t},b),{},{components:n})):r.a.createElement(d,l({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var b=2;b<o;b++)i[b]=n[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},132:function(e,t,n){"use strict";var a=n(0);t.a=({level:e,path:t})=>a.createElement("p",{style:{display:"flex",alignItems:"center",lineHeight:0}},0==e&&a.createElement("span",{className:"badge badge--danger",style:{marginRight:10}},"Unstable"),1==e&&a.createElement("span",{className:"badge badge--warning",style:{marginRight:10}},"Release Candidate"),function(e){if(!e)return;const t=e.split("/")[0];return a.createElement("a",{href:`https://docs.rs/${t}/*/${e}`,target:"blank"},a.createElement("span",{className:"badge badge--primary"},"Reference \u2192"))}(t))},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(2),r=(n(0),n(130)),o=n(132);const i={id:"font",title:"Font",sidebar_label:"Font"},l={unversionedId:"font",id:"font",isDocsHomePage:!1,title:"Font",description:"Fonts, like colors, are more complicated than it might seem at first glance.",source:"@site/docs/api/font.md",slug:"/font",permalink:"/api/font",editUrl:"https://github.com/polyhorn/polyhorn.github.io/edit/master/docs/api/font.md",version:"current",sidebar_label:"Font",sidebar:"apiSidebar",previous:{title:"Color",permalink:"/api/color"},next:{title:"ImageSource",permalink:"/api/image-source"}},c=[{value:"Font Families",id:"font-families",children:[{value:"Generic Font Families",id:"generic-font-families",children:[]},{value:"Organization",id:"organization",children:[]}]},{value:"Font Styles",id:"font-styles",children:[]},{value:"Related Work",id:"related-work",children:[]}],b={rightToc:c};function s({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},b,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)(o.a,{level:0,path:"polyhorn-ui/struct.Font.html",mdxType:"Status"}),Object(r.b)("p",null,"Fonts, like colors, are more complicated than it might seem at first glance."),Object(r.b)("h2",{id:"font-families"},"Font Families"),Object(r.b)("h3",{id:"generic-font-families"},"Generic Font Families"),Object(r.b)("p",null,"Polyhorn provides a few generic font families that can be used to get a font\nin a particular category that looks best on a user's display."),Object(r.b)("div",{className:"row"},Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Serif"),Object(r.b)("img",{src:"/img/fonts-serif.png"})),Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Sans-Serif"),Object(r.b)("img",{src:"/img/fonts-sans-serif.png"})),Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Monospace"),Object(r.b)("img",{src:"/img/fonts-monospace.png"}))),Object(r.b)("h3",{id:"organization"},"Organization"),Object(r.b)("p",null,"A single font family (e.g. ",Object(r.b)("em",{parentName:"p"},"Proxima Nova"),") consists of a matrix of font styles\nand font weights. Each entry in this matrix is a type face and is stored in its\nown file."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"left"})),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Normal"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Italic"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"..."))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Regular")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"*-regular.otf")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"*-italic.otf")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"...")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Bold")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"*-bold.otf")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"*-italic-bold.otf")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"...")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"...")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"..."),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"..."),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"...")))),Object(r.b)("p",null,"It's important to note that a font file only contains a single type face (i.e.\na single combination of a font style and a font weight). If you want to use both\nnormal and italic, or regular and bold text in your app, you must make sure to\nbundle all required variations."),Object(r.b)("h2",{id:"font-styles"},"Font Styles"),Object(r.b)("p",null,"Most fonts come in one to three styles: a normal style and one or two slanted\nstyles. Below is an example of the difference between normal, oblique and\nitalic font styles of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://rubjo.github.io/victor-mono/"}),"Victor Mono"),", an\nopen-source monospace font."),Object(r.b)("div",{className:"row"},Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Normal"),Object(r.b)("img",{src:"/img/fonts-normal.png"})),Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Oblique"),Object(r.b)("img",{src:"/img/fonts-oblique.png"})),Object(r.b)("div",{className:"col col--4"},Object(r.b)("h4",null,"Italic"),Object(r.b)("img",{src:"/img/fonts-italic.png"}))),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"normal")," font style is the default font style used for text. The\n",Object(r.b)("strong",{parentName:"p"},"oblique")," font style (if present) is a slanted version with the same glyphs.\nSpecifically, notice that the r, s and f are the same glyph in both the normal\nand oblique font styles (but with a different angle). An ",Object(r.b)("strong",{parentName:"p"},"italic")," font style\nis made from a separate set of glyphs: observe that the r, s and f are\ncompletely different glyphs than those in the normal font style."),Object(r.b)("p",null,"Most fonts do not offer both an oblique and italic font styles. Oblique fonts\nare an inexpensive way to get a slanted version of a normal font, whereas italic\nfonts might cost as much time as the original font to make."),Object(r.b)("h2",{id:"related-work"},"Related Work"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"This API is modelled after the\n",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.w3.org/TR/css-fonts-4/"}),"CSS Fonts Module Level 4")," working draft.")))}s.isMDXComponent=!0}}]);