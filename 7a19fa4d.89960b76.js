(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,u=b["".concat(i,".").concat(d)]||b[d]||m[d]||a;return n?o.a.createElement(u,c(c({ref:t},s),{},{components:n})):o.a.createElement(u,c({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),o=n(6),a=(n(0),n(117)),i={id:"scroll-view",title:"ScrollView",sidebar_label:"ScrollView",hide_title:!0},c={unversionedId:"scroll-view",id:"scroll-view",isDocsHomePage:!1,title:"ScrollView",description:"Unstable",source:"@site/docs/components/scroll-view.md",slug:"/scroll-view",permalink:"/components/scroll-view",editUrl:"https://github.com/polyhorn/polyhorn.github.io/edit/master/docs/components/scroll-view.md",version:"current",sidebar_label:"ScrollView",sidebar:"componentsSidebar",previous:{title:"Modal",permalink:"/components/modal"},next:{title:"StatusBar",permalink:"/components/status-bar"}},l=[{value:"Roadmap",id:"roadmap",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("span",{className:"badge badge--danger"},"Unstable"),Object(a.b)("h1",{style:{marginTop:0}},"ScrollView"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust",metastring:'title="Definition"',title:'"Definition"'}),"pub enum ScrollViewIndicatorStyle {\n    Default,\n    Black,\n    White,\n}\n\npub struct ScrollView {\n    pub style: Style,\n    pub content_insets: Insets<f32>,\n    pub indicator_style: ScrollViewIndicatorStyle,\n    pub indicator_insets: Insets<f32>,\n}\n")),Object(a.b)("h2",{id:"roadmap"},"Roadmap"),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"There are some open issues that we would like to get some feedback on through\nour ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/polyhorn/polyhorn"}),"Github"),". Please chime in if you have\nsome thoughts."),Object(a.b)("ol",{parentName:"div"},Object(a.b)("li",{parentName:"ol"},"Most style properties are ignored. We need to find an efficient way to\nshare much of the components' internal logic between several components. For\nexample, many of the appearance-related style fields (e.g. background-color,\nopacity) are identical across most components but require separate code for\neach."),Object(a.b)("li",{parentName:"ol"},"Scroll views only work horizontally."),Object(a.b)("li",{parentName:"ol"},"On recent versions of iOS, it is now possible to set indicator insets for the\nhorizontal and vertical indicators separately. It might be worthwhile to\nconsider doing this too. However, it's not clear what the fallback should be."),Object(a.b)("li",{parentName:"ol"},"There are many properties still missing: ",Object(a.b)("inlineCode",{parentName:"li"},"always_bounce"),",\n",Object(a.b)("inlineCode",{parentName:"li"},"deceleration_rate"),", etc."),Object(a.b)("li",{parentName:"ol"},"It might be worthwhile to briefly consider if we can merge ",Object(a.b)("inlineCode",{parentName:"li"},"ScrollView")," and\n",Object(a.b)("inlineCode",{parentName:"li"},"View"),", i.e. to make it a property (just like css):",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-rust"}),"poly!(<View style={ style! { overflow: scroll; } } />)\n")),"But it is not yet clear how much overhead this would add.")))))}p.isMDXComponent=!0}}]);